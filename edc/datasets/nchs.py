from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import os
from ftplib import FTP

import numpy as np
import pandas as pd
import glob
from tqdm import tqdm
import pyreadstat

from ..utils import get_file
BROAD_DX = ['DIAG13D','DIAG23D','DIAG33D','RFV13D','RFV23D','RFV33D']
SPECIFIC_DX = ['DIAG1','DIAG2','DIAG3','DIAG1R','DIAG2R','DIAG3R']
PATIENT = ['AGER','AGEDAYS','PREGNANT','ETHNIC','RACE','RACER','RACEETH']
VISIT = ['PRIMCARE','REFER','INJDET','INJURY','VMONTH','VDAY','VDAYR','ARRTIME']
VITALS = ['TEMPF','PULSE','RESPR','BPSYS','BPDIAS','PAINSCALE']

DEFAULT_COLS = ['SETTYPE','MAJOR','RFV13D','RFV1','YEAR','REGION','AGE','AGER','AGEDAYS','SEX','DIAG1','DIAG13D','CAUSE1']


PUB_DIR = 'pub/Health_Statistics/NCHS'


# NCHS_BASE = 'ftp://ftp.cdc.gov//dataset_documentation/nhamcs/spss/'

def _remote_ls(host='ftp.cdc.gov',path=''):
    contents = []
    with FTP(host) as ftp:
        ftp.login()
        ftp.cwd(path)
        ftp.dir(contents.append)

    files = [f.split(' ')[-1] for f in contents]
    return files

def _data_files(survey,file_format):
    remote_dir = '/'.join([PUB_DIR,'dataset_documentation',str(survey).lower(),str(file_format).lower()])
    with FTP('ftp.cdc.gov') as ftp:
        ftp.login()
        contents = ftp.nlst(remote_dir)

    return [f for f in contents if f.endswith('.zip')]

# def _cache_spss_sav(dataset, files=SPSS_FILES):
#     base = 'ftp://ftp.cdc.gov/pub/Health_Statistics/NCHS/dataset_documentation/nhamcs/spss/'
#     fpaths = []
#     for fname in files:
#         path = get_file(fname.lower(),
#                         origin = base + fname,
#                         cache_dir = DEFAULT_CACHE_DIR,
#                         extract=True,
#                         cache_subdir = 'nhamcs')
#         fpaths.append(path)

#     return fpaths

def _cache(files):
    base = 'ftp://ftp.cdc.gov/pub/Health_Statistics/NCHS/dataset_documentation/nhamcs/spss/'
    fpaths = []
    for fname in files:
        path = get_file(fname.lower(),
                        origin = base + fname,
                        cache_dir = DEFAULT_CACHE_DIR,
                        extract=True,
                        cache_subdir = 'nhamcs')
        fpaths.append(path)

    return fpaths

def topn(df,column,query=None,n=5):
    if query is not None:
        results = df.query(query).groupby(column).size().sort_values(ascending=False)
    else:
        results = df.groupby(column).size().sort_values(ascending=False)
        
    return results[:n]

DRUG_COLS = [
	'MED',
	'MED1',
	'MED2',
	'MED3',
	'MED4',
	'MED5',
	'MED6',
	'MED7',
	'MED8',
	'MED9',
	'MED10',
	'MED11',
	'MED12',
	'MED13',
	'MED14',
	'MED15',
	'MED16',
	'MED17',
	'MED18',
	'MED19',
	'MED20',
	'MED21',
	'MED22',
	'MED23',
	'MED24',
	'MED25',
	'MED26',
	'MED27',
	'MED28',
	'MED29',
	'MED30',
	'NCMED1',
	'NCMED2',
	'NCMED3',
	'NCMED4',
	'NCMED5',
	'NCMED6',
	'NCMED7',
	'NCMED8',
	'NCMED9',
	'NCMED10',
	'NCMED11',
	'NCMED12',
	'NCMED13',
	'NCMED14',
	'NCMED15',
	'NCMED16',
	'NCMED17',
	'NCMED18',
	'NCMED19',
	'NCMED20',
	'NCMED21',
	'NCMED22',
	'NCMED23',
	'NCMED24',
	'NCMED25',
	'NCMED26',
	'NCMED27',
	'NCMED28',
	'NCMED29',
	'NCMED30',
	'NUMMED',
	'EMEDREC',
	'EMEDALGR',
	'EMEDIDR',
	'NMEDCARE',
	'NMEDCAID',
	'DRUGID1',
	'RX1CAT1',
	'RX1CAT2',
	'RX1CAT3',
	'RX1CAT4',
	'RX1V1C1',
	'RX1V1C2',
	'RX1V1C3',
	'RX1V1C4',
	'RX1V2C1',
	'RX1V2C2',
	'RX1V2C3',
	'RX1V2C4',
	'RX1V3C1',
	'RX1V3C2',
	'RX1V3C3',
	'RX1V3C4',
	'DRUGID2',
	'RX2CAT1',
	'RX2CAT2',
	'RX2CAT3',
	'RX2CAT4',
	'RX2V1C1',
	'RX2V1C2',
	'RX2V1C3',
	'RX2V1C4',
	'RX2V2C1',
	'RX2V2C2',
	'RX2V2C3',
	'RX2V2C4',
	'RX2V3C1',
	'RX2V3C2',
	'RX2V3C3',
	'RX2V3C4',
	'DRUGID3',
	'RX3CAT1',
	'RX3CAT2',
	'RX3CAT3',
	'RX3CAT4',
	'RX3V1C1',
	'RX3V1C2',
	'RX3V1C3',
	'RX3V1C4',
	'RX3V2C1',
	'RX3V2C2',
	'RX3V2C3',
	'RX3V2C4',
	'RX3V3C1',
	'RX3V3C2',
	'RX3V3C3',
	'RX3V3C4',
	'DRUGID4',
	'RX4CAT1',
	'RX4CAT2',
	'RX4CAT3',
	'RX4CAT4',
	'RX4V1C1',
	'RX4V1C2',
	'RX4V1C3',
	'RX4V1C4',
	'RX4V2C1',
	'RX4V2C2',
	'RX4V2C3',
	'RX4V2C4',
	'RX4V3C1',
	'RX4V3C2',
	'RX4V3C3',
	'RX4V3C4',
	'DRUGID5',
	'RX5CAT1',
	'RX5CAT2',
	'RX5CAT3',
	'RX5CAT4',
	'RX5V1C1',
	'RX5V1C2',
	'RX5V1C3',
	'RX5V1C4',
	'RX5V2C1',
	'RX5V2C2',
	'RX5V2C3',
	'RX5V2C4',
	'RX5V3C1',
	'RX5V3C2',
	'RX5V3C3',
	'RX5V3C4',
	'DRUGID6',
	'RX6CAT1',
	'RX6CAT2',
	'RX6CAT3',
	'RX6CAT4',
	'RX6V1C1',
	'RX6V1C2',
	'RX6V1C3',
	'RX6V1C4',
	'RX6V2C1',
	'RX6V2C2',
	'RX6V2C3',
	'RX6V2C4',
	'RX6V3C1',
	'RX6V3C2',
	'RX6V3C3',
	'RX6V3C4',
	'DRUGID7',
	'RX7CAT1',
	'RX7CAT2',
	'RX7CAT3',
	'RX7CAT4',
	'RX7V1C1',
	'RX7V1C2',
	'RX7V1C3',
	'RX7V1C4',
	'RX7V2C1',
	'RX7V2C2',
	'RX7V2C3',
	'RX7V2C4',
	'RX7V3C1',
	'RX7V3C2',
	'RX7V3C3',
	'RX7V3C4',
	'DRUGID8',
	'RX8CAT1',
	'RX8CAT2',
	'RX8CAT3',
	'RX8CAT4',
	'RX8V1C1',
	'RX8V1C2',
	'RX8V1C3',
	'RX8V1C4',
	'RX8V2C1',
	'RX8V2C2',
	'RX8V2C3',
	'RX8V2C4',
	'RX8V3C1',
	'RX8V3C2',
	'RX8V3C3',
	'RX8V3C4',
	'DRUGID9',
	'RX9CAT1',
	'RX9CAT2',
	'RX9CAT3',
	'RX9CAT4',
	'RX9V1C1',
	'RX9V1C2',
	'RX9V1C3',
	'RX9V1C4',
	'RX9V2C1',
	'RX9V2C2',
	'RX9V2C3',
	'RX9V2C4',
	'RX9V3C1',
	'RX9V3C2',
	'RX9V3C3',
	'RX9V3C4',
	'DRUGID10',
	'RX10CAT1',
	'RX10CAT2',
	'RX10CAT3',
	'RX10CAT4',
	'RX10V1C1',
	'RX10V1C2',
	'RX10V1C3',
	'RX10V1C4',
	'RX10V2C1',
	'RX10V2C2',
	'RX10V2C3',
	'RX10V2C4',
	'RX10V3C1',
	'RX10V3C2',
	'RX10V3C3',
	'RX10V3C4',
	'DRUGID11',
	'RX11CAT1',
	'RX11CAT2',
	'RX11CAT3',
	'RX11CAT4',
	'RX11V1C1',
	'RX11V1C2',
	'RX11V1C3',
	'RX11V1C4',
	'RX11V2C1',
	'RX11V2C2',
	'RX11V2C3',
	'RX11V2C4',
	'RX11V3C1',
	'RX11V3C2',
	'RX11V3C3',
	'RX11V3C4',
	'DRUGID12',
	'RX12CAT1',
	'RX12CAT2',
	'RX12CAT3',
	'RX12CAT4',
	'RX12V1C1',
	'RX12V1C2',
	'RX12V1C3',
	'RX12V1C4',
	'RX12V2C1',
	'RX12V2C2',
	'RX12V2C3',
	'RX12V2C4',
	'RX12V3C1',
	'RX12V3C2',
	'RX12V3C3',
	'RX12V3C4',
	'DRUGID13',
	'RX13CAT1',
	'RX13CAT2',
	'RX13CAT3',
	'RX13CAT4',
	'RX13V1C1',
	'RX13V1C2',
	'RX13V1C3',
	'RX13V1C4',
	'RX13V2C1',
	'RX13V2C2',
	'RX13V2C3',
	'RX13V2C4',
	'RX13V3C1',
	'RX13V3C2',
	'RX13V3C3',
	'RX13V3C4',
	'DRUGID14',
	'RX14CAT1',
	'RX14CAT2',
	'RX14CAT3',
	'RX14CAT4',
	'RX14V1C1',
	'RX14V1C2',
	'RX14V1C3',
	'RX14V1C4',
	'RX14V2C1',
	'RX14V2C2',
	'RX14V2C3',
	'RX14V2C4',
	'RX14V3C1',
	'RX14V3C2',
	'RX14V3C3',
	'RX14V3C4',
	'DRUGID15',
	'RX15CAT1',
	'RX15CAT2',
	'RX15CAT3',
	'RX15CAT4',
	'RX15V1C1',
	'RX15V1C2',
	'RX15V1C3',
	'RX15V1C4',
	'RX15V2C1',
	'RX15V2C2',
	'RX15V2C3',
	'RX15V2C4',
	'RX15V3C1',
	'RX15V3C2',
	'RX15V3C3',
	'RX15V3C4',
	'DRUGID16',
	'RX16CAT1',
	'RX16CAT2',
	'RX16CAT3',
	'RX16CAT4',
	'RX16V1C1',
	'RX16V1C2',
	'RX16V1C3',
	'RX16V1C4',
	'RX16V2C1',
	'RX16V2C2',
	'RX16V2C3',
	'RX16V2C4',
	'RX16V3C1',
	'RX16V3C2',
	'RX16V3C3',
	'RX16V3C4',
	'DRUGID17',
	'RX17CAT1',
	'RX17CAT2',
	'RX17CAT3',
	'RX17CAT4',
	'RX17V1C1',
	'RX17V1C2',
	'RX17V1C3',
	'RX17V1C4',
	'RX17V2C1',
	'RX17V2C2',
	'RX17V2C3',
	'RX17V2C4',
	'RX17V3C1',
	'RX17V3C2',
	'RX17V3C3',
	'RX17V3C4',
	'DRUGID18',
	'RX18CAT1',
	'RX18CAT2',
	'RX18CAT3',
	'RX18CAT4',
	'RX18V1C1',
	'RX18V1C2',
	'RX18V1C3',
	'RX18V1C4',
	'RX18V2C1',
	'RX18V2C2',
	'RX18V2C3',
	'RX18V2C4',
	'RX18V3C1',
	'RX18V3C2',
	'RX18V3C3',
	'RX18V3C4',
	'DRUGID19',
	'RX19CAT1',
	'RX19CAT2',
	'RX19CAT3',
	'RX19CAT4',
	'RX19V1C1',
	'RX19V1C2',
	'RX19V1C3',
	'RX19V1C4',
	'RX19V2C1',
	'RX19V2C2',
	'RX19V2C3',
	'RX19V2C4',
	'RX19V3C1',
	'RX19V3C2',
	'RX19V3C3',
	'RX19V3C4',
	'DRUGID20',
	'RX20CAT1',
	'RX20CAT2',
	'RX20CAT3',
	'RX20CAT4',
	'RX20V1C1',
	'RX20V1C2',
	'RX20V1C3',
	'RX20V1C4',
	'RX20V2C1',
	'RX20V2C2',
	'RX20V2C3',
	'RX20V2C4',
	'RX20V3C1',
	'RX20V3C2',
	'RX20V3C3',
	'RX20V3C4',
	'DRUGID21',
	'RX21CAT1',
	'RX21CAT2',
	'RX21CAT3',
	'RX21CAT4',
	'RX21V1C1',
	'RX21V1C2',
	'RX21V1C3',
	'RX21V1C4',
	'RX21V2C1',
	'RX21V2C2',
	'RX21V2C3',
	'RX21V2C4',
	'RX21V3C1',
	'RX21V3C2',
	'RX21V3C3',
	'RX21V3C4',
	'DRUGID22',
	'RX22CAT1',
	'RX22CAT2',
	'RX22CAT3',
	'RX22CAT4',
	'RX22V1C1',
	'RX22V1C2',
	'RX22V1C3',
	'RX22V1C4',
	'RX22V2C1',
	'RX22V2C2',
	'RX22V2C3',
	'RX22V2C4',
	'RX22V3C1',
	'RX22V3C2',
	'RX22V3C3',
	'RX22V3C4',
	'DRUGID23',
	'RX23CAT1',
	'RX23CAT2',
	'RX23CAT3',
	'RX23CAT4',
	'RX23V1C1',
	'RX23V1C2',
	'RX23V1C3',
	'RX23V1C4',
	'RX23V2C1',
	'RX23V2C2',
	'RX23V2C3',
	'RX23V2C4',
	'RX23V3C1',
	'RX23V3C2',
	'RX23V3C3',
	'RX23V3C4',
	'DRUGID24',
	'RX24CAT1',
	'RX24CAT2',
	'RX24CAT3',
	'RX24CAT4',
	'RX24V1C1',
	'RX24V1C2',
	'RX24V1C3',
	'RX24V1C4',
	'RX24V2C1',
	'RX24V2C2',
	'RX24V2C3',
	'RX24V2C4',
	'RX24V3C1',
	'RX24V3C2',
	'RX24V3C3',
	'RX24V3C4',
	'DRUGID25',
	'RX25CAT1',
	'RX25CAT2',
	'RX25CAT3',
	'RX25CAT4',
	'RX25V1C1',
	'RX25V1C2',
	'RX25V1C3',
	'RX25V1C4',
	'RX25V2C1',
	'RX25V2C2',
	'RX25V2C3',
	'RX25V2C4',
	'RX25V3C1',
	'RX25V3C2',
	'RX25V3C3',
	'RX25V3C4',
	'DRUGID26',
	'RX26CAT1',
	'RX26CAT2',
	'RX26CAT3',
	'RX26CAT4',
	'RX26V1C1',
	'RX26V1C2',
	'RX26V1C3',
	'RX26V1C4',
	'RX26V2C1',
	'RX26V2C2',
	'RX26V2C3',
	'RX26V2C4',
	'RX26V3C1',
	'RX26V3C2',
	'RX26V3C3',
	'RX26V3C4',
	'DRUGID27',
	'RX27CAT1',
	'RX27CAT2',
	'RX27CAT3',
	'RX27CAT4',
	'RX27V1C1',
	'RX27V1C2',
	'RX27V1C3',
	'RX27V1C4',
	'RX27V2C1',
	'RX27V2C2',
	'RX27V2C3',
	'RX27V2C4',
	'RX27V3C1',
	'RX27V3C2',
	'RX27V3C3',
	'RX27V3C4',
	'DRUGID28',
	'RX28CAT1',
	'RX28CAT2',
	'RX28CAT3',
	'RX28CAT4',
	'RX28V1C1',
	'RX28V1C2',
	'RX28V1C3',
	'RX28V1C4',
	'RX28V2C1',
	'RX28V2C2',
	'RX28V2C3',
	'RX28V2C4',
	'RX28V3C1',
	'RX28V3C2',
	'RX28V3C3',
	'RX28V3C4',
	'DRUGID29',
	'RX29CAT1',
	'RX29CAT2',
	'RX29CAT3',
	'RX29CAT4',
	'RX29V1C1',
	'RX29V1C2',
	'RX29V1C3',
	'RX29V1C4',
	'RX29V2C1',
	'RX29V2C2',
	'RX29V2C3',
	'RX29V2C4',
	'RX29V3C1',
	'RX29V3C2',
	'RX29V3C3',
	'RX29V3C4',
	'DRUGID30',
	'RX30CAT1',
	'RX30CAT2',
	'RX30CAT3',
	'RX30CAT4',
	'RX30V1C1',
	'RX30V1C2',
	'RX30V1C3',
	'RX30V1C4',
	'RX30V2C1',
	'RX30V2C2',
	'RX30V2C3',
	'RX30V2C4',
	'RX30V3C1',
	'RX30V3C2',
	'RX30V3C3',
	'RX30V3C4',
]
